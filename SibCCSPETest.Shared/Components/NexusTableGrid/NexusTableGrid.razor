@namespace SibCCSPETest.Shared.Components
@attribute [CascadingTypeParameter(nameof(TItem))]
@typeparam TItem

<div class="table-container">
    @if (Items != null)
    {
        <CascadingValue Value=this>
            @Columns
        </CascadingValue>
    }

    @ToolTemplate

    <table class="table table-bordered">
        <thead>
            <tr>
                <th style="display:@(ExpandMode != NexusTableGridExpandMode.None ? "" : "none");width:10px;"></th>
                @foreach (var item in _items)
                {
                    <th scope="col">@item.Title</th>
                }
            </tr>
        </thead>
        <tbody>
            @if (IsTableEmpty)
            {
                <tr class="empty-message">
                    <td colspan="@CountOfItems">
                        <h3>@EmptyMessage</h3>
                    </td>
                </tr>
            }
            else
            {
                @foreach (var item in Data.Concat(InsertItem))
                {
                    <tr @onclick="() => SelectRow(item)" class="@(SelectedRows.Contains(item) ? "selected-row" : "")">
                        <th @onclick="@(() => OnExpandRow(item))" @onclick:stopPropagation="true"
                            style="display:@(ExpandMode != NexusTableGridExpandMode.None ? "" : "none");">
                            <i class="bi @(ExpandedRows.Contains(item) ? "bi-chevron-down" : "bi-chevron-right")"></i>
                        </th>
                        @if (EditMode != NexusTableGridEditMode.None && EditedItem.Contains(item))
                        {
                            <CascadingValue Value="item">
                                @EditColumns(item)
                            </CascadingValue>
                        }
                        else
                        {
                            <CascadingValue Value="item">
                                @Columns
                            </CascadingValue>
                        }
                    </tr>
                    @if (ExpandMode != NexusTableGridExpandMode.None)
                    {
                        <tr class="expand-row" style="display:@(ExpandedRows.Contains(item) ? "" : "none");">
                            <td colspan="@CountOfItems">
                                <CascadingValue Value="item">
                                    @ExpandRow(item)
                                </CascadingValue>
                            </td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
</div>
